---
- hosts: pi
  gather_facts: no
  become: true

  vars:
    - username: "{{ whoami.stdout }}"

  handlers:
    - name: restart ssh
      service:
        name: ssh
        state: restarted

  tasks:
    - name: check if python is installed
      raw: python --version
      ignore_errors: yes
      register: python_check

    - name: ensure python is installed
      raw: apt-get update && apt-get install -y python-simplejson
      when: python_check | failed

    - name: ensure latest zsh version is installed
      apt:
        name: "zsh"
        state: "latest"
        update_cache: "yes"
        cache_valid_time: "3600"

    - name: get local username
      command: whoami
      delegate_to: localhost
      connection: local
      become: false
      register: whoami
      changed_when: false

    - name: ensure user is created
      user:
        name: "{{ username }}"
        home: "/home/{{ username }}"
        shell: "/bin/zsh"

    - name: ensure zshrc file is uploaded
      template:
        src: "zshrc.j2"
        dest: "/home/{{ username }}/.zshrc"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0644"

    - name: ensure user is added to sudoers
      copy:
        dest: "/etc/sudoers.d/user-{{ username }}"
        content: "{{ username }} ALL=NOPASSWD: ALL"

    - name: ensure ssh directory exists
      file:
        path: "/home/{{ username }}/.ssh"
        owner: "{{ username }}"
        group: "{{ username }}"
        state: "directory"

    - name: ensure ssh public key is uploaded for user
      authorized_key:
        user: "{{ username }}"
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        path: "/home/{{ username }}/.ssh/authorized_keys"

    - name: ensure root and password ssh are disabled
      lineinfile:
        line: "{{ item }} no"
        regexp: "^{{ item }}"
        dest: "/etc/ssh/sshd_config"
      with_items:
        - "PasswordAuthentication"
        - "PermitRootLogin"
      notify: restart ssh

    - name: ensure pi user is removed
      user:
        name: "pi"
        state: "absent"
